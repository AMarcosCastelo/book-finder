{"version":3,"sources":["img/blackLupa.svg","img/whiteLupa.svg","components/Header/styles.ts","components/Header/index.tsx","components/Cards/styles.ts","components/Cards/index.tsx","components/Main/styles.ts","components/Main/index.tsx","services/api.ts","Utils/usePersistedState.ts","styles/global.ts","styles/themes/light.ts","styles/themes/dark.ts","components/Search/styles.ts","components/Search/index.tsx","App.tsx","index.tsx"],"names":["module","exports","Container","styled","div","props","theme","colors","primary","textLight","Header","toggleTheme","useContext","ThemeContext","title","onChange","checked","checkedIcon","uncheckedIcon","height","width","handleDiameter","offColor","shade","onColor","secundary","CardItem","a","Content","Cards","book","href","previewLink","target","src","imageLinks","thumbnail","alt","className","authors","join","undefined","publishedDate","split","reverse","publisher","Main","booksData","map","index","key","api","axios","create","baseURL","usePersistedState","initialState","useState","storageValue","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","createGlobalStyle","backgroud","text","inputBorder","SearchContainer","Title","p","Input","input","blackLupa","whiteLupa","Search","getData","value","setValue","type","placeholder","onKeyDown","event","App","light","setTheme","books","setBooks","get","params","q","setStateBooks","data","items","console","error","forEach","img","volumeInfo","push","dark","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6603521b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blackLupa.1421341d.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteLupa.5cdf7043.svg\";","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 60px;\n  background: ${props => props.theme.colors.primary};\n  color: ${props => props.theme.colors.textLight};\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 30px;\n`;\n","import React, {useContext} from 'react';\nimport Switch from 'react-switch'\nimport { ThemeContext } from 'styled-components'\nimport {shade} from 'polished'\n\nimport { Container } from './styles';\n\ninterface Props {\n  toggleTheme(): void\n};\n\nconst Header: React.FC<Props> = ({toggleTheme}) => {\n  const {colors, title} = useContext(ThemeContext)\n\n  return (\n    <Container>\n      Book Finder\n      <Switch\n        onChange={toggleTheme}\n        checked={title === 'dark'}\n        checkedIcon={false}\n        uncheckedIcon={false}\n        height={10}\n        width={40}\n        handleDiameter={20}\n        offColor={shade(0.15, colors.primary)}\n        onColor={colors.secundary}\n      />\n    </Container>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const CardItem = styled.a`\n  display: flex;\n  flex-direction: row;\n  width: 400px;\n  padding: 10px;\n  margin: 10px;\n  text-decoration: none;\n  color: ${props => props.theme.colors.textLight};\n  background-color: ${props => props.theme.colors.primary};\n  border-radius: 10px;\n  box-shadow: 0px 5px 10px 3px rgba(0, 0, 0, 0.55);\n  &:hover {\n    transform: translateX(1%);\n    /* box-shadow: 0 4rem 8rem rgba(0, 0, 0, 0.2); */\n  }\n  img {\n    max-height: 120px;\n    max-width: 100px;\n  }\n`;\n\nexport const Content = styled.div`\n  padding: 10px;\n\n  h4 {\n    font-size: 18px;\n    margin-bottom: 8px;\n  }\n\n  span {\n    margin: 10px 0 10px 0;\n  }\n\n  p {\n    margin-top: 10px;\n  }\n`;","import React from 'react';\nimport { CardItem, Content } from './styles';\nimport { VolumeInfo } from '../../App';\n\ninterface Props {\n  book: VolumeInfo\n};\n\nconst Cards: React.FC<Props> = ({book}) => {\n  return (\n    <CardItem href={book.previewLink} target=\"_blanck\">\n      <img \n        src={book.imageLinks.thumbnail !== '-' ? \n        book.imageLinks.thumbnail : \n        'https://upload.wikimedia.org/wikipedia/commons/thumb/7/72/Placeholder_book.svg/2000px-Placeholder_book.svg.png'}\n        alt={`${book.title}`}\n      />\n      <Content>\n        <h4>{book.title}</h4>\n        <span className=\"author\"><strong>Author: </strong>{book.authors.join(\", \")}</span>\n        <p><strong>Published: </strong>{book.publishedDate !== undefined ? book.publishedDate.split('-').reverse().join('/') : '-'}</p>\n        <p><strong>Pubisher: </strong>{book.publisher !== undefined ? book.publisher : '-'}</p>\n      </Content>\n    </CardItem>\n  );\n}\n\nexport default Cards;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap; \n  padding: 20px\n`;\n","import React from 'react';\nimport Cards from '../Cards';\nimport { VolumeInfo } from '../../App';\n\nimport { Container } from './styles';\n\ninterface Props {\n  booksData: VolumeInfo[]\n};\n\nconst Main: React.FC<Props> = ({booksData})=> {\n\n  return (\n    <Container>\n      {booksData.map((book, index) => <Cards book={book} key={index} />)}\n    </Container>\n  );\n}\n\nexport default Main;","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://www.googleapis.com/books/v1'\n});\n\nexport default api;\n","import {useState, useEffect, Dispatch, SetStateAction} from 'react';\n\ntype Response<T> = [\n  T,\n  Dispatch<SetStateAction<T>>\n];\n\nfunction usePersistedState<T>(key: string, initialState: T): Response<T> {\n  const [state, setState] = useState(() => {\n    const storageValue = localStorage.getItem(key);\n\n    if (storageValue) {\n      return JSON.parse(storageValue);\n    } else {\n      return initialState;\n    }\n\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nexport default usePersistedState;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: none;\n  }\n\n  body {\n    background: ${props => props.theme.colors.backgroud};\n    font-size: 14px;\n    color: #${props => props.theme.colors.text};\n    font-family: \"Roboto\", sans-serif;\n  }\n`;\n","export default {\n  title: 'light',\n  colors: {\n    primary: '#7C7C7C',\n    secundary: '#d8d4d5',\n    inputBorder: '#384d48',\n    backgroud: '#F5F5F5',\n    text: '#333',\n    textLight:'#F5f5f5',\n  }\n};\n","export default {\n  title: 'dark',\n  colors: {\n    primary: '#333',\n    secundary: '#acad94',\n    inputBorder: '#d8d4d5',\n    backgroud: '#222',\n    text: '#fff',\n    textLight:'#F5f5f5',\n  }\n};","import styled from 'styled-components';\nimport blackLupa from '../../img/blackLupa.svg';\nimport whiteLupa from '../../img/whiteLupa.svg';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom:20px;\n`;\n\nexport const SearchContainer = styled.div`\n  padding-top: 54px;\n`;\n\nexport const Title = styled.p`\n  font-size: 22px;\n  font-weight: 900;\n  text-align: center;\n  color: ${props => props.theme.colors.text};\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 12px 24px;\n  margin-top: 20px;\n  background-color: transparent;\n  transition: transform 250ms ease-in-out;\n  font-size: 14px;\n  line-height: 18px;\n  color: ${props => props.theme.colors.text};\n  background-color: transparent;\n  background-image: url(${props => props.theme.title === 'light' ? blackLupa : whiteLupa});\n  background-repeat: no-repeat;\n  background-size: 18px 18px;\n  background-position: 95% center;\n  border-radius: 50px;\n  border: 1px solid ${props => props.theme.colors.inputBorder};\n  transition: all 250ms ease-in-out;\n  backface-visibility: hidden;\n  transform-style: preserve-3d;\n  \n  &::placeholder {\n    color: color(${props => props.theme.colors.text} a(0.8));\n    text-transform: uppercase;\n    letter-spacing: 1.5px;\n  }\n  \n  &:hover,\n  &:focus {\n    padding: 12px 0;\n    outline: 0;\n    border: 1px solid transparent;\n    border-bottom: 1px solid ${props => props.theme.colors.text};\n    border-radius: 0;\n    background-position: 100% center;\n  }\n`;\n","import React, { useState } from 'react';\nimport { Container, SearchContainer, Title, Input } from './styles';\n\ninterface Props {\n  getData(value: string): Promise<void> \n};\n\nconst Search: React.FC<Props> = ({getData}) => {\n  const [value, setValue] = useState('');\n\n  function handleSearch (event: React.KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      getData(value);\n    };\n  };\n\n  return (\n    <Container>\n      <SearchContainer>\n        <Title>Go ahead, look for a book or author.</Title>\n        <Input \n          type=\"text\" \n          placeholder=\"Search\" \n          onKeyDown={handleSearch} \n          onChange={(event) => setValue(event.target.value)}\n          value={value}\n        />\n      </SearchContainer>\n    </Container>\n  );\n}\n\nexport default Search;\n","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport api from './services/api';\nimport {ThemeProvider, DefaultTheme} from 'styled-components';\nimport usePersistedState from './Utils/usePersistedState';\n\nimport GlobalStyle from './styles/global';\nimport light from './styles/themes/light';\nimport dark from './styles/themes/dark';\nimport Search from './components/Search';\n\nexport type VolumeInfo = {\n  title: String,\n  authors: string [],\n  previewLink: string,\n  publishedDate: string,\n  imageLinks: {thumbnail: string},\n  publisher: string\n};\n\nexport type Book = {\n  volumeInfo: VolumeInfo\n}\n\nfunction App() {\n  const [theme, setTheme] = usePersistedState<DefaultTheme>('theme', light);\n  const [books, setBooks] = useState<VolumeInfo[]>([]);\n\n  const toggleTheme = () => {\n    setTheme(theme.title === 'light' ? dark : light);\n  };\n\n  async function getData (value: String): Promise<void>  {\n    try {\n      const response = await api.get('/volumes', {\n        params: {\n          q: value,\n        },\n      });\n      setStateBooks(response.data.items);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  function setStateBooks (data: []): void {\n    const books: VolumeInfo[] = [];\n    data.forEach((book: Book) => {\n      const img = book.volumeInfo.imageLinks;\n      books.push({\n        title: book.volumeInfo.title,\n        authors: book.volumeInfo.authors,\n        previewLink: book.volumeInfo.previewLink,\n        publishedDate: book.volumeInfo.publishedDate,\n        imageLinks: {thumbnail: img !== undefined ? img.thumbnail : '-'},\n        publisher: book.volumeInfo.publisher\n      });\n    });\n    setBooks(books);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <GlobalStyle/>\n        <Header toggleTheme={toggleTheme} />\n        <Search getData={getData} />\n        <Main booksData={books} /> \n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}